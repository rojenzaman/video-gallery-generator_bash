#########################################################################################
#### Configuration Section
#########################################################################################

thumbdir="video"
htmlfile="index.html"
tmpfs="/dev/shm"
title="Video Gallery"
footer='generated by <a href="./video-gallery-generator.sh">video-gallery-generator.sh</a>'
subtitle_language="English Subtitle"
subtitle_code="en"

# Use convert from ImageMagick
convert="convert"
# Use exiftool for EXIF Information
exif="exiftool"

stylesheet="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css" #(currently v3.4.1)
plyr_css="https://cdnjs.cloudflare.com/ajax/libs/plyr/3.7.3/plyr.css"
plyr_js="https://cdnjs.cloudflare.com/ajax/libs/plyr/3.7.3/plyr.polyfilled.js"
downloadicon='<span class="glyphicon glyphicon-floppy-save" aria-hidden="true"></span>'
movieicon='<span class="glyphicon glyphicon-film" aria-hidden="true"></span>'
homeicon='<span class="glyphicon glyphicon-home" aria-hidden="true"></span>'
#homeicon=".."

# Debugging output
# true=enable, false=disable
debug=false

#########################################################################################
#### End Configuration Section
#########################################################################################

script_name=$(basename "$0")
datetime=$(date -u "+%Y-%m-%d %H:%M:%S")
datetime+=" UTC"

function usage {
	returnCode="$1"
	echo -e "Usage: $script_name [-t <title>] [-d <thumbdir>] [-m] [-e] [-s] [-q] [-h]:
	[-t <title>]\\t sets the title (default: $title)
	[-d <thumbdir>]\\t sets the thumbdir (default: $thumbdir)
	[-m]\\t\\t use tmpfs for html generation (default: $tmpfs/vgg-$htmlfile)
	[-e]\\t\\t skip print exif data
	[-s]\\t\\t skip thumbnail generation
	[-q]\\t\\t skip author and title generation
	[-h]\\t\\t displays help (this message)"
	exit "$returnCode"
}

function debugOutput(){
	if [[ "$debug" == true ]]; then
		echo "$1" # if debug variable is true, echo whatever's passed to the function
	fi
}

function getFileSize(){
	# Be aware that BSD stat doesn't support --version and -c
	if stat --version &>/dev/null; then
		# GNU
		myfilesize=$(stat -c %s "$1" | awk '{$1/=1000000;printf "%.2fMB\n",$1}')
	else
		# BSD
		myfilesize=$(stat -f %z "$1" | awk '{$1/=1000000;printf "%.2fMB\n",$1}')
	fi
	echo "$myfilesize"
}

while getopts ":t:d:mesqh" opt; do
	case $opt in
	t)
		title="$OPTARG"
		;;
	d)
		thumbdir="$OPTARG"
		;;
	m)
		mflag="true"
		;;
	e)
		eflag="true"
		;;
	s)
		sflag="true"
		;;
	q)
		qflag="true"
		;;
	h)
		usage 0
		;;
	*)
		echo "Invalid option: -$OPTARG"
		usage 1
		;;
	esac
done

# Post configuration
debugOutput "- $script_name : $datetime"
if [[ $mflag == true ]]; then
	_htmlfile=$htmlfile
	htmlfile=$tmpfs/vgg-$htmlfile
fi

### Check Commands
command -v $convert >/dev/null 2>&1 || { echo >&2 "!!! $convert it's not installed.  Aborting."; exit 1; }
command -v $exif >/dev/null 2>&1 || { echo >&2 "!!! $exif it's not installed.  Aborting."; exit 1; }

### Create Folders
[[ -d "$thumbdir" ]] || mkdir "$thumbdir" || exit 2

#### Create Startpage
debugOutput "$htmlfile"


# generate index page
generate_index_html > $htmlfile

## Generate the HTML Files for videos in thumbdir
file=0
while [[ $file -lt $numfiles ]]; do
	filename=${filelist[$file]}
	prev=""
	next=""
	[[ $file -ne 0 ]] && prev=${filelist[$((file - 1))]}
	[[ $file -ne $((numfiles - 1)) ]] && next=${filelist[$((file + 1))]}
	imagehtmlfile="$thumbdir/$filename.html"
	if [[ ! $eflag == true ]]; then
		exifinfo=$($exif "$filename")
	fi
	filesize=$(getFileSize "$filename")
	debugOutput "$imagehtmlfile"
	get_title=""
	if [[ ! $qflag == true ]]; then
		get_title=$(exiftool -b -Title "$filename")
	fi
	if [[ -z "$get_title" ]]; then
		video_title="$filename"
	else
		video_title="$get_title"
	fi
	get_artist=""
	if [[ ! $qflag == true ]]; then
		get_artist=$(exiftool -b -Artist "$filename")
	fi
	if [[ -z "$get_artist" ]]; then
		video_artist=""
	else
		video_artist="- $get_artist"
	fi

	# generate video page
	generate_video_player > "$imagehtmlfile"

	(( file++ ))
done

if [[ $mflag = true ]]; then
	mv $htmlfile $_htmlfile
fi

debugOutput "= okay :)"
